name: Nexus BE CI/CD

on:
  pull_request:       # CI runs on PRs
  push:
    branches: [main]  # CI + CD on main
  workflow_dispatch:  # Manual redeploy

env:
  DEPLOY_DIR: /home/${{ secrets.EC2_USER }}/app/nexus-be
  REPO: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build, extract, and package artifacts
        run: make all

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: artifacts-*.tar.gz

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Save EC2 private key
        run: |
          echo "${{ secrets.EC2_KEY }}" | tr -d '\r' > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: .

      - name: Extract artifact
        run: |
          LATEST_TARBALL=$(ls -t artifacts-*.tar.gz | head -n1)
          tar -xzf $LATEST_TARBALL

      - name: Rsync artifacts to EC2
        run: |
          rsync -avz -e "ssh -i ec2_key.pem -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT || 22 }}" artifacts/ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:${{ env.DEPLOY_DIR }}/

      - name: Deploy & restart services on EC2
        run: |
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no -p ${{ secrets.EC2_PORT || 22 }} ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << EOF
          set -e
          cd $DEPLOY_DIR

          pnpm install --prod --no-frozen-lockfile

          if pm2 describe gateway-svc >/dev/null 2>&1; then
            echo "ðŸ”„ Restarting services..."
            pm2 restart ecosystem.config.js
          else
            echo "ðŸš€ Starting services..."
            pm2 start ecosystem.config.js
          fi
          pm2 save
          EOF
